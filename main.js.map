{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/custom-pipes/filter.pipe.ts","webpack:///./src/app/login-form/login-form.component.css","webpack:///./src/app/login-form/login-form.component.html","webpack:///./src/app/login-form/login-form.component.ts","webpack:///./src/app/onboarded-students-list/onboarded-students-list.component.css","webpack:///./src/app/onboarded-students-list/onboarded-students-list.component.html","webpack:///./src/app/onboarded-students-list/onboarded-students-list.component.ts","webpack:///./src/app/onboarding-form/onboarding-form.component.css","webpack:///./src/app/onboarding-form/onboarding-form.component.html","webpack:///./src/app/onboarding-form/onboarding-form.component.ts","webpack:///./src/app/services/categories.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/student.service.ts","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.css","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/shared/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/user-logged-in/user-logged-in.component.css","webpack:///./src/app/user-logged-in/user-logged-in.component.html","webpack:///./src/app/user-logged-in/user-logged-in.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginService } from \".//services/login.service\"\nimport { LoginFormComponent } from '../app/login-form/login-form.component'\nimport { UserLoggedInComponent } from '../app/user-logged-in/user-logged-in.component'\nimport { OnboardingFormComponent } from '../app/onboarding-form/onboarding-form.component'\nimport { OnboardedStudentsListComponent } from '../app/onboarded-students-list/onboarded-students-list.component'\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'onboarded-students', pathMatch: 'full' },\n  { path: 'login', component: LoginFormComponent },\n  {\n    path: 'logged', component: UserLoggedInComponent, canActivate: [LoginService],\n    children: [\n      { path: '', redirectTo: 'onboarded-students', pathMatch: 'full' },\n      { path: 'onboard-students', component: OnboardingFormComponent },\n      { path: 'onboarded-students', component: OnboardedStudentsListComponent }\n    ]\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'student-onboarding';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OnboardingFormComponent } from './onboarding-form/onboarding-form.component';\nimport { OnboardedStudentsListComponent } from './onboarded-students-list/onboarded-students-list.component';\n\nimport { LoginService } from './services/login.service'\nimport { StudentService } from './services/student.service'\nimport { CategoryService } from './services/categories.service'\n\nimport { FilterPipe }from './custom-pipes/filter.pipe';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { UserLoggedInComponent } from './user-logged-in/user-logged-in.component';\nimport { ConfirmationDialogComponent } from './shared/confirmation-dialog/confirmation-dialog.component';\n\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OnboardingFormComponent,\n    OnboardedStudentsListComponent,\n    FilterPipe,\n    LoginFormComponent,\n    UserLoggedInComponent,\n    ConfirmationDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    StudentService,\n    CategoryService,\n    LoginService\n  ],\n  entryComponents: [ConfirmationDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Student } from '../models/student';\r\n\r\n@Pipe({\r\n  name: 'filterStudents'\r\n})\r\n\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: Student[], searchText: string): any[] {\r\n    if (!items) return [];\r\n    if (!searchText) return items;\r\n    searchText = searchText.toLowerCase();\r\n    return items.filter(it => {\r\n      return it.name.toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLWZvcm0vbG9naW4tZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"width: 40%; top:0; bottom: 0;left: 0; right: 0; margin: auto;\\\">\\r\\n    <h3>Login school admin</h3>\\r\\n\\r\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onloginFormSubmit()\\\">\\r\\n\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"User name\\\" formControlName=\\\"username\\\">\\r\\n\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\r\\n\\r\\n        <div style=\\\"color: red;\\\">{{errorMessage}}</div>\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-primary btn-sm\\\">LOGIN</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"resetForm()\\\" class=\\\"btn btn-secondary btn-sm\\\">RESET</button>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\n\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  errorMessage: string;\n\n  constructor(private loginService: LoginService, private fb: FormBuilder) { }\n\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n\n  ngOnInit() {\n  }\n\n  onloginFormSubmit() {\n    if(this.loginForm.get('username').value == \"admin\" && this.loginForm.get('password').value == \"admin\") {\n      this.loginService.setLogIn(true);\n      this.loginService.setUserName(this.loginForm.get('username').value);\n    } else {\n      this.errorMessage = \"Invalid credentials. Please enter Username as 'admin' and password as 'admin' for login\";\n    }\n  }\n\n  resetForm() {\n    this.loginForm.reset();\n  }\n}\n","module.exports = \".international {\\r\\n    background-color: lightblue;\\r\\n}\\r\\n\\r\\n.domestic {\\r\\n    background-color: lightgoldenrodyellow;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb25ib2FyZGVkLXN0dWRlbnRzLWxpc3Qvb25ib2FyZGVkLXN0dWRlbnRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLHNDQUFzQztBQUMxQyIsImZpbGUiOiJzcmMvYXBwL29uYm9hcmRlZC1zdHVkZW50cy1saXN0L29uYm9hcmRlZC1zdHVkZW50cy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW50ZXJuYXRpb25hbCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XHJcbn1cclxuXHJcbi5kb21lc3RpYyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdvbGRlbnJvZHllbGxvdztcclxufSJdfQ== */\"","module.exports = \"<h3>Student Details</h3>\\n\\n<div style=\\\"margin-bottom: 10px;\\\">\\n  <div style=\\\"text-align: left;\\\">\\n    <select [(ngModel)]=\\\"studentCategoryFilter\\\">\\n      <option value=\\\"all\\\">All</option>\\n      <option value=\\\"0\\\">International</option>\\n      <option value=\\\"1\\\">Domestic</option>\\n    </select>\\n  </div>\\n\\n  <div style=\\\"text-align: right;\\\">\\n    <input [(ngModel)]=\\\"studentNameFilter\\\" placeholder=\\\"Search student\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"card-columns\\\">\\n  <div *ngFor=\\\"let Student of allStudents | filterStudents : studentNameFilter\\\">\\n    <div class=\\\"card\\\" style=\\\"width: 18rem;\\\"\\n      *ngIf=\\\"studentCategoryFilter=='all' || Student.categories==studentCategoryFilter\\\">\\n\\n      <div class=\\\"card-body\\\" [ngClass]=\\\"{\\n        'international' : Student.categories==0,\\n        'domestic' : Student.categories==1\\n           }\\\">\\n        <h5 class=\\\"card-title\\\">{{'Student ' + Student.id}}</h5>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{Student.name}}</h6>\\n        <span class=\\\"card-text\\\">\\n          {{Student.name + ' is a '}}</span>\\n        <span>{{Student.categories == 0 ? 'International student' : 'Domestic student'}}</span>\\n        <span>{{' with his last score being ' + Student.lastClassScore}}</span>\\n        <div></div>\\n\\n        <td><button type=\\\"button\\\" (click)=\\\"sendStudentToEdit(Student.id)\\\" class=\\\"btn btn-success btn-sm\\\">Edit</button>\\n        </td>\\n        <td><button type=\\\"button\\\" (click)=\\\"sendStudentToView(Student.id)\\\" class=\\\"btn btn-secondary btn-sm\\\">View</button>\\n        </td>\\n        <td><button type=\\\"button\\\" (click)=\\\"deleteStudent(Student.id)\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button></td>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { Student } from '../models/student';\nimport { StudentService } from '../services/student.service';\n\nimport { ConfirmationDialogComponent } from '../shared/confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-onboarded-students-list',\n  templateUrl: './onboarded-students-list.component.html',\n  styleUrls: ['./onboarded-students-list.component.css']\n})\nexport class OnboardedStudentsListComponent implements OnInit {\n\n  allStudents: Student[];\n  statusCode: number;\n  studentCategoryFilter: string = \"all\";\n  studentNameFilter: string = \"\";\n\n  // dialogRef: MatDialog<ConfirmationDialog>;\n  public dialogRef: MatDialogRef<ConfirmationDialogComponent>\n\n  constructor(private studentService: StudentService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getAllStudents();\n  }\n\n  //Fetch all students\n  getAllStudents() {\n    this.studentService.getAllStudents()\n      .subscribe(\n        data => this.allStudents = data,\n        errorCode => this.statusCode = errorCode);\n  }\n\n  // send the studentId to form component for viewing using window state\n  sendStudentToView(studentId: string) {\n    this.statusCode = null;\n    this.router.navigateByUrl('logged/onboard-students', {\n      state: {\n        studentId: studentId,\n        action: \"view\"\n      }\n    });\n  }\n\n  // send the studentId to form component for editing using window state\n  sendStudentToEdit(studentId: string) {\n    this.statusCode = null;\n    this.router.navigateByUrl('logged/onboard-students', {\n      state: {\n        studentId: studentId,\n        action: \"edit\"\n      }\n    });\n  }\n\n  // Delete student after confirming with user\n  deleteStudent(studentId: string) {\n\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      disableClose: false\n    });\n    this.dialogRef.componentInstance.confirmMessage = \"Are you sure you want to delete ?\"\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.statusCode = null;\n        this.studentService.deleteStudentById(studentId)\n          .subscribe(successCode => {\n            //this.statusCode = successCode;\n            //Expecting success code 204 from server\n            this.statusCode = 204;\n            this.getAllStudents();\n          },\n            errorCode => this.statusCode = errorCode);\n      }\n      this.dialogRef = null;\n    });\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29uYm9hcmRpbmctZm9ybS9vbmJvYXJkaW5nLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"width: 40%; top:0; bottom: 0;left: 0; right: 0; margin: auto;\\\">\\n<h3>\\n     Onboarding form <span *ngIf=\\\"actionToTake=='view'\\\">(view)</span> <span *ngIf=\\\"actionToTake=='edit'\\\">(edit)</span>\\n</h3>\\n<div>\\n     <form [formGroup]=\\\"studentForm\\\" (ngSubmit)=\\\"onStudentFormSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"name\\\">Student Name</label>\\n               <input class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"categories\\\">Category</label>\\n\\n               <select class=\\\"form-control\\\" id=\\\"categories\\\" formControlName=\\\"categories\\\"\\n                    [attr.disabled]=\\\"actionToTake=='view' ? '' : null\\\" (change)=\\\"onCategoryChange($event.target.value)\\\">\\n                    <option *ngFor=\\\"let category of allCategories; let i=index\\\" value={{i}}>\\n                         {{category.name}}</option>\\n               </select>\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"documents\\\">Documents</label>\\n\\n               <div formArrayName=\\\"documents\\\" style=\\\"text-align: left;\\\">\\n                    <div *ngFor=\\\"let document of documents.controls; let i = index\\\" class=\\\"row\\\">\\n                         <span class=\\\"col-sm-7\\\">{{allDocuments[i].name}}</span>\\n                         <span class=\\\"col-sm-1\\\" *ngIf=allDocuments[i].mandatory>* </span>\\n                         <span class=\\\"col-sm-1\\\" *ngIf=!allDocuments[i].mandatory> </span>\\n                         <span class=\\\"col-sm-4\\\"><input [attr.disabled]=\\\"actionToTake=='view' ? '' : null\\\"\\n                                   type=\\\"checkbox\\\" [formControlName]=\\\"i\\\"></span>\\n\\n                    </div>\\n               </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"dob\\\">DOB</label>\\n               <input class=\\\"form-control\\\" id=\\\"dob\\\" type=\\\"date\\\" formControlName=\\\"dob\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"fatherName\\\">Father's name</label>\\n               <input class=\\\"form-control\\\" id=\\\"fatherName\\\" type=\\\"text\\\" formControlName=\\\"fatherName\\\" placeholder=\\\"Father's Name\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"fatherName\\\">Mother's name</label>\\n               <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"motherName\\\" placeholder=\\\"Mother's Name\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n               <label for=\\\"lastClassScore\\\">Last class score</label>\\n               <input class=\\\"form-control\\\" id=\\\"lastClassScore\\\" type=\\\"number\\\" formControlName=\\\"lastClassScore\\\" placeholder=\\\"%(marks)\\\">\\n          </div>\\n\\n          <button *ngIf=\\\"!studentIdToUpdate\\\" [disabled]=\\\"!studentForm.valid || actionToTake=='view'\\\" class=\\\"btn btn-primary\\\">ON\\n               BOARD</button>\\n          <button *ngIf=\\\"studentIdToUpdate\\\" [disabled]=\\\"!studentForm.valid || actionToTake=='view'\\\" class=\\\"btn btn-primary\\\">UPDATE</button>\\n     </form>\\n\\n     <br />\\n     <div style=\\\"color: green;\\\" *ngIf=\\\"statusCode\\\">\\n          <div *ngIf=\\\"statusCode === 201\\\" [ngClass]=\\\"'success'\\\">\\n               Student added successfully.\\n          </div>\\n          <div *ngIf=\\\"statusCode === 409\\\" [ngClass]=\\\"'success'\\\">\\n               Student already exists.\\n          </div>\\n          <div *ngIf=\\\"statusCode === 200\\\" [ngClass]=\\\"'success'\\\">\\n               Student updated successfully.\\n          </div>\\n          <div style=\\\"color: red;\\\" *ngIf=\\\"statusCode === 500\\\" [ngClass]=\\\"'error'\\\">\\n               Internal Server Error.\\n          </div>\\n     </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { StudentService } from '../services/student.service';\nimport { CategoryService } from '../services/categories.service';\n\nimport { Student } from '../models/student';\nimport { Category } from '../models/category';\nimport { Document } from '../models/document';\n\nimport { map } from 'rxjs/operators'\n\n\n@Component({\n  selector: 'app-onboarding-form',\n  templateUrl: './onboarding-form.component.html',\n  styleUrls: ['./onboarding-form.component.css']\n})\nexport class OnboardingFormComponent implements OnInit {\n  allCategories: Category[]\n  allDocuments: Document[]\n  allStudents: Student[];\n  statusCode: number;\n  studentIdToUpdate = null;\n  processValidation = false;\n\n  //Create constructor to get service instance\n  constructor(private fb: FormBuilder, private studentService: StudentService, private categoryService: CategoryService, private activatedRoute: ActivatedRoute) {\n  }\n\n  studentForm = null;\n  state$ = null;\n  actionToTake = null;\n\n  //Create ngOnInit() and and load students\n  ngOnInit(): void {\n    // get state from window history. This state is set when a user clicks on view/edit buttons of a student\n    this.state$ = this.activatedRoute.paramMap\n      .pipe(map(() => window.history.state));\n\n    this.state$.subscribe(\n      (res) => {\n        this.studentIdToUpdate = res.studentId;\n        this.actionToTake = res.action;\n      },\n      (err) => console.log(err),\n    );\n\n\n    //Create form\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      categories: [\"0\"],\n      documents: this.fb.array([]),\n      dob: ['', Validators.required],\n      fatherName: ['', Validators.required],\n      motherName: ['', Validators.required],\n      lastClassScore: ['', Validators.required]\n    });\n\n    // load data\n    this.loadData();\n\n    if (this.studentIdToUpdate != null && this.actionToTake == \"view\") {\n      this.studentForm.disable();\n    }\n  }\n\n  // load data and populate form based on whether studentIdToUpdate is null or not. \n  // If it's null means we need an unfilled form, else we want to populate the form \n  // with student details pointed by studentIdToUpdate\n  loadData() {\n    this.categoryService.getAllCategories()\n      .subscribe(\n        data => {\n          this.allCategories = data;\n\n          // this.getAllStudents();\n          if (this.studentIdToUpdate != null) {\n            this.loadStudentToEdit(this.studentIdToUpdate);\n          } else {\n            this.allDocuments = this.allCategories[0].documents;\n            this.createDocumentFormArray(this.allDocuments);\n          }\n        },\n        errorCode => this.statusCode = errorCode);\n  }\n\n  // clear and then populate documents in the form based on category selection by user\n  createDocumentFormArray(documentsOfCategory) {\n    this.clearDocuments();\n\n    documentsOfCategory.forEach((document) => {\n      if (document.mandatory) {\n        this.documents.push(this.fb.control(document.submitted, Validators.requiredTrue));\n      } else {\n        this.documents.push(this.fb.control(document.submitted));\n      }\n    });\n  }\n\n  //Handle create and update student\n  onStudentFormSubmit() {\n    this.processValidation = true;\n    if (this.studentForm.invalid) {\n      return; //Validation failed, exit from method.\n    }\n    //Form is valid, now perform create or update\n    this.statusCode = null;\n    let student = this.studentForm.value;\n    if (this.studentIdToUpdate == null) {\n      //Generate student id then create student\n      this.studentService.getAllStudents()\n        .subscribe(students => {\n\n          //Generate student id\n          if (students.length > 0) {\n            let maxIndex = students.length - 1;\n            let studentWithMaxIndex = students[maxIndex];\n            let studentId = studentWithMaxIndex.id + 1;\n            student.id = studentId;\n          } else {\n            student.id = 1;\n          }\n\n          //Create student\n          this.studentService.createStudent(student)\n            .subscribe(successCode => {\n              this.statusCode = successCode;\n              this.loadData();\n              this.backToCreateStudent();\n            },\n              errorCode => this.statusCode = errorCode\n            );\n        });\n    } else {\n      //Handle update student\n      student.id = this.studentIdToUpdate;\n      this.studentService.updateStudent(student)\n        .subscribe(successCode => {\n          this.statusCode = successCode;\n          this.loadData();\n          this.backToCreateStudent();\n        },\n          errorCode => this.statusCode = errorCode);\n    }\n  }\n\n  //Load student by id to edit\n  loadStudentToEdit(studentId: string) {\n    this.statusCode = null;\n    this.studentService.getStudentById(studentId)\n      .subscribe(student => {\n        this.studentIdToUpdate = student.id;\n        this.allDocuments = this.allCategories[Number(student.categories)].documents;\n\n        this.createDocumentFormArray(this.allDocuments);\n\n        this.studentForm.setValue({\n          name: student.name,\n          categories: student.categories,\n          documents: student.documents,\n          dob: student.dob,\n          fatherName: student.fatherName,\n          motherName: student.motherName,\n          lastClassScore: student.lastClassScore\n        });\n        this.processValidation = true;\n      },\n        errorCode => this.statusCode = errorCode);\n\n  }\n\n  //Go back from update to create\n  backToCreateStudent() {\n    this.studentIdToUpdate = null;\n    this.studentForm.reset();\n    this.processValidation = false;\n  }\n\n  // on change of selection of category from drop down\n  onCategoryChange(filterVal: any) {\n    this.allDocuments = this.allCategories[filterVal].documents;\n    this.createDocumentFormArray(this.allDocuments);\n  }\n\n  // get documents from form\n  get documents(): FormArray {\n    return this.studentForm.get('documents') as FormArray;\n  };\n\n  // clear documents in form\n  clearDocuments() {\n    while (0 !== this.documents.length) {\n      this.documents.removeAt(0);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, URLSearchParams, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport { Category } from '../models/category';\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n    //URL for CRUD operations\r\n    // categoryUrl = \"http://localhost:3000/categories\";\r\n    categoryUrl = \"https://json-server-student-onboarding.herokuapp.com/categories\";\r\n    //Create constructor to get Http instance\r\n    constructor(private http: Http) {\r\n    }\r\n    //Fetch all categories\r\n    getAllCategories(): Observable<Category[]> {\r\n        return this.http.get(this.categoryUrl)\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n    \r\n    //Fetch category by id\r\n    getCategoryById(categoryId: string): Observable<Category> {\r\n        let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n\r\n        return this.http.get(this.categoryUrl + \"/\" + categoryId)\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n    \r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body;\r\n    }\r\n    \r\n    private handleError(error: Response | any) {\r\n        console.error(error.message || error);\r\n        return Observable.throw(error.status);\r\n    }\r\n} ","import { Injectable } from '@angular/core';\r\n\r\nimport { CanActivate, Router, Route } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class LoginService implements CanActivate {\r\n    loggedIn: boolean = false;\r\n    userName: string = null;\r\n\r\n    constructor(public _router: Router) {}\r\n\r\n    canActivate(): boolean {\r\n        if (this.loggedIn) {\r\n            return true;\r\n        }\r\n        \r\n        this._router.navigate(['/login']);\r\n        return false;\r\n      }\r\n\r\n      // set the state whether a valid login has been made or not\r\n      setLogIn(loggedIn: boolean) {\r\n          this.loggedIn = loggedIn;\r\n          this._router.navigate(['/logged']);\r\n      }\r\n\r\n      // get name of user who has logged in\r\n      getUserName(): string {\r\n        return this.userName;\r\n      }\r\n\r\n      // set the name of user who has logged in\r\n      setUserName(userName: string) {\r\n        this.userName = userName;\r\n      }\r\n} ","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, URLSearchParams, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport { Student } from '../models/student';\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n    //URL for CRUD operations\r\n    // studentUrl = \"http://localhost:3000/students\";\r\n    studentUrl = \"https://json-server-student-onboarding.herokuapp.com/students\";\r\n    //Create constructor to get Http instance\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    //Fetch all students\r\n    getAllStudents(): Observable<Student[]> {\r\n        return this.http.get(this.studentUrl)\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n\r\n    }\r\n\r\n    //Create student\r\n    createStudent(student: Student): Observable<number> {\r\n        let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        return this.http.post(this.studentUrl, student, options)\r\n            .map(success => success.status)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //Fetch student by id\r\n    getStudentById(studentId: string): Observable<Student> {\r\n        let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        \r\n        return this.http.get(this.studentUrl + \"/\" + studentId)\r\n            .map(this.extractData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //Update student\r\n    updateStudent(student: Student): Observable<number> {\r\n        let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        return this.http.put(this.studentUrl + \"/\" + student.id, student, options)\r\n            .map(success => success.status)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    //Delete student\t\r\n    deleteStudentById(studentId: string): Observable<number> {\r\n        let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: cpHeaders });\r\n        return this.http.delete(this.studentUrl + \"/\" + studentId)\r\n            .map(success => success.status)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body;\r\n    }\r\n    \r\n    private handleError(error: Response | any) {\r\n        console.error(error.message || error);\r\n        return Observable.throw(error.status);\r\n    }\r\n} ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb25maXJtYXRpb24tZGlhbG9nL2NvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 md-dialog-title>Confirm</h1>\\n<div md-dialog-content>{{confirmMessage}}</div>\\n<div md-dialog-actions>\\n  <button md-button style=\\\"color: #fff;background-color: #153961;\\\" (click)=\\\"dialogRef.close(true)\\\">Confirm</button>\\n  <button md-button (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) {}\n\n  ngOnInit(){\n    \n  }\n\n  public confirmMessage:string;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbG9nZ2VkLWluL3VzZXItbG9nZ2VkLWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div style=\\\"padding:5px\\\">\\n      <nav class=\\\"navbar navbar-light bg-light\\\">\\n          <span class=\\\"navbar-brand mb-0 h1\\\">On Boarding app</span>\\n          <span><i class=\\\"material-icons\\\" style=\\\"font-size:36px; margin-right: 5px;\\\">account_circle</i>{{adminName}}</span>\\n      </nav>\\n    <ul class=\\\"nav nav-tabs\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"onboard-students\\\">Onboarding Form</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"onboarded-students\\\">Student's List</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\nimport { LoginService } from '../services/login.service'\n\n@Component({\n  selector: 'app-user-logged-in',\n  templateUrl: './user-logged-in.component.html',\n  styleUrls: ['./user-logged-in.component.css']\n})\n// this is the main component after user has logged in\nexport class UserLoggedInComponent implements OnInit {\n\n  adminName: string = null;\n\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.adminName = this.loginService.getUserName();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}